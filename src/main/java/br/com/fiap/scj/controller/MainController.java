package br.com.fiap.scj.controller;

import java.util.Iterator;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import br.com.fiap.scj.model.Usuario;
import br.com.fiap.scj.repository.UsuarioRepository;

@RestController    // This means that this class is a Controller
@RequestMapping(path="/base") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UsuarioRepository usuarioRepository;
//create update delete find 
	@PostMapping(path="/create") // Map ONLY GET Requests
	public @ResponseBody String create (@RequestParam String nome, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Usuario n = new Usuario();
		n.setNome(nome);
		n.setEmail(email);
		usuarioRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Usuario> getAll() {
		// This returns a JSON or XML with the users
		return usuarioRepository.findAll();
	}

	@GetMapping("/usuario")
	public @ResponseBody Boolean getByLoginSenha(@RequestParam String login, @RequestParam String senha) {
		// This returns a JSON or XML with the users
		Iterable<Usuario> findAll = usuarioRepository.findAll();
		for (Iterator<Usuario> iterator = findAll.iterator(); iterator.hasNext();) {
			Usuario usuario = iterator.next();
			if (usuario.getLogin()!=null && usuario.getSenha()!=null) {
				if (usuario.getLogin().equals(login) && usuario.getSenha().equals(senha)) {
					return true;
				}
			}
		}
		return false;
	}

	@GetMapping(path="/teste")
	public String teste() {
		// This returns a JSON or XML with the users
		return "teste";
	}
}